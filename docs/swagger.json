{
    "schemes": [
        "http",
        "https"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Service for managing key.",
        "title": "Crypto Key API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "KTB Blockchain Team",
            "url": "http://www.swagger.io/support",
            "email": "blockchain.info@krungthai.co.th"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9090",
    "basePath": "/",
    "paths": {
        "/ktb/blockchain/v1/crypto/ecdsa": {
            "post": {
                "description": "Method for generating key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ECDSA"
                ],
                "summary": "Generate ECDSA Key",
                "parameters": [
                    {
                        "description": "object body for generating key.",
                        "name": "GenerateEcdsaKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ecdsa.GenerateEcdsaKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ecdsa.GenerateEcdsaKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/ktb/blockchain/v1/crypto/ecdsa/sign": {
            "post": {
                "description": "Method for signing signature.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ECDSA"
                ],
                "summary": "Sign Message",
                "parameters": [
                    {
                        "description": "object body for signing message.",
                        "name": "SignEcdsaKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ecdsa.SignEcdsaKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ecdsa.SignEcdsaKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/ktb/blockchain/v1/crypto/ecdsa/verify": {
            "post": {
                "description": "Method for verifying signature.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "ECDSA"
                ],
                "summary": "Verify Signature",
                "parameters": [
                    {
                        "description": "object body for verifying signature.",
                        "name": "VerifyEcdsaKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ecdsa.VerifyEcdsaKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/ecdsa.VerifyEcdsaKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        },
        "/ktb/blockchain/v1/crypto/public_key/validate": {
            "post": {
                "description": "Method for validating key.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "KEY"
                ],
                "summary": "Validation Publice Key",
                "parameters": [
                    {
                        "description": "object body for validating key.",
                        "name": "ValidatePublicKey",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/key.ValidatePublicKeyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/key.ValidatePublicKeyResponse"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "ecdsa.GenerateEcdsaKeyRequest": {
            "type": "object",
            "properties": {
                "curveType": {
                    "type": "string"
                }
            }
        },
        "ecdsa.GenerateEcdsaKeyResponse": {
            "type": "object",
            "properties": {
                "privateKey": {
                    "type": "string"
                },
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "ecdsa.SignEcdsaKeyRequest": {
            "type": "object",
            "properties": {
                "hashType": {
                    "type": "string",
                    "example": "sha256"
                },
                "message": {
                    "type": "string",
                    "example": "trust"
                },
                "privateKey": {
                    "type": "string",
                    "example": "-----BEGIN ECDSA PRIVATE KEY-----\nMHcCAQEEIB5g4Upn7ewh+vSLq9f4WJxdbhTfpsYa0SYaEkDl7xZPoAoGCCqGSM49\nAwEHoUQDQgAEmacWvMg72qXbAuh1JnfFwjY5eU1SxAiphgN3UQXTzlHJR0RGJsSL\nRuYpbc5asjL+oXvQ41ENxbYE58EsXMhbOw==\n-----END ECDSA PRIVATE KEY-----\n"
                }
            }
        },
        "ecdsa.SignEcdsaKeyResponse": {
            "type": "object",
            "properties": {
                "signByte": {
                    "type": "string",
                    "example": "MEUCIQCi+IDRTl/cU1lsu5BLDqnCQY11oy2fsQdAGWbFheodHQIgAc8OdD5ahT2peGT1R2czo9TsTgCXKSGyjUDvp3adFaI="
                },
                "signHex": {
                    "type": "string",
                    "example": "3045022100a2f880d14e5fdc53596cbb904b0ea9c2418d75a32d9fb107401966c585ea1d1d022001cf0e743e5a853da97864f5476733a3d4ec4e00972921b28d40efa7769d15a2"
                }
            }
        },
        "ecdsa.VerifyEcdsaKeyRequest": {
            "type": "object",
            "properties": {
                "hashType": {
                    "type": "string",
                    "example": "sha256"
                },
                "message": {
                    "type": "string",
                    "example": "trust"
                },
                "publicKey": {
                    "type": "string",
                    "example": "-----BEGIN ECDSA PRIVATE KEY-----\nMHcCAQEEIB5g4Upn7ewh+vSLq9f4WJxdbhTfpsYa0SYaEkDl7xZPoAoGCCqGSM49\nAwEHoUQDQgAEmacWvMg72qXbAuh1JnfFwjY5eU1SxAiphgN3UQXTzlHJR0RGJsSL\nRuYpbc5asjL+oXvQ41ENxbYE58EsXMhbOw==\n-----END ECDSA PRIVATE KEY-----\n"
                },
                "signature": {
                    "type": "string",
                    "example": "MEUCIQCi+IDRTl/cU1lsu5BLDqnCQY11oy2fsQdAGWbFheodHQIgAc8OdD5ahT2peGT1R2czo9TsTgCXKSGyjUDvp3adFaI="
                }
            }
        },
        "ecdsa.VerifyEcdsaKeyResponse": {
            "type": "object",
            "properties": {
                "validation": {
                    "type": "boolean",
                    "example": true
                }
            }
        },
        "key.ValidatePublicKeyRequest": {
            "type": "object",
            "properties": {
                "publicKey": {
                    "type": "string"
                }
            }
        },
        "key.ValidatePublicKeyResponse": {
            "type": "object",
            "properties": {
                "publicKeyStatus": {
                    "type": "boolean"
                },
                "publicKeyType": {
                    "type": "string"
                }
            }
        },
        "response.ErrResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "400"
                },
                "error": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Bad Request"
                }
            }
        },
        "response.Response": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string",
                    "example": "200"
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Success"
                }
            }
        }
    }
}